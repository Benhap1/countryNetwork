server:
  port: 8090
  tomcat:
    use-apr: false
    connection-timeout: 60000

spring:
  application:
    name: country-service
  codec:
    max-in-memory-size: 5000KB
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        use_sql_comments: true
        type: trace
        format_sql: true
    generate-dll: true
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: true
  datasource:
    url: jdbc:postgresql://localhost:5432/country
    username: postgres
    password: postgres
    hikari:
      schema: country_schema
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS country_schema
      connection-timeout: 300000
  kafka:
    bootstrap-servers: localhost:9092
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    schemas: country_schema
    url: jdbc:postgresql://localhost:5432/country
    user: postgres
    password: postgres
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
      enabled: true
eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
app:
  baseUrl:
    cityAndCountryApi: https://api.hh.ru/areas
    checkRequestToken: http://localhost:8085/api/v1/auth/validate
  className:
    country: Country
    city: City
  storage:
    bucketName: skb44gr
    accesKeyId: YCAJEOK5hcucGv_JMFnDRdfba
    secretKey: YCMnZVHVigHbHcMqCO4LopqQO-gacdaolsIS6mxn
  kafka:
    fileDeleteTopic: "file-delete-topic"
    fileDeleteGroupId: "file-delete-group-id"

logging:
  level:
    org:
      springframework:
        web: debug
        web.multipart: trace
        orm:
          jpa:
            INFO
          JpaTransactionManager:
            DEBUG
        transaction:
          INFO
        interceptor:
          TRACE
      apache:
        catalina: debug
        coyote: debug




